子查询
含义：一条查询语句中又嵌套了另一条完整的select语句，其中被
嵌套的select语句，称为子查询或内查询。
在外面的查询语句称为主查询或外查询。

查询location_id=1700的员工姓名

SELECT e.`first_name`
FROM employees e 
INNER JOIN departments d
ON e.`department_id`=d.`department_id`
WHERE d.`location_id`=1700


SELECT employees.`first_name`
FROM employees
WHERE employees.`department_id` IN
(
SELECT departments.`department_id`
FROM departments 
WHERE departments.`location_id`=1700
)

特点：

子查询都放在小括号内
子查询一般放在主查询条件的右侧	充当条件
也可以放在from后面		充当表
或者select的后面		
/having后面			充当条件

子查询优先于主查询，主查询使用了子查询的执行结果
①：单行子查询
	结果集只有一行,一般配合单行操作符使用：> < = <> >= <=
②：多行子查询
	结果集有多行,一般配合多行操作符使用:any all in 、not in

单行子查询：
谁的工资比Abel高
SELECT last_name
FROM employees 
WHERE salary >
(
SELECT salary
FROM employees
WHERE last_name='Abel'
)

job_id与141号员工相同，salary比143号员工多的员工的姓名，job_id和工资

SELECT first_name
FROM employees 
WHERE job_id=
(
SELECT job_id
FROM employees
WHERE employee_id=141
)
AND salary>
(
SELECT salary
FROM employees
WHERE employee_id=143
)

返回公司工资最少的员工的last_name,job_id和salary

SELECT employees.`last_name`,employees.`job_id`,employees.`email`
FROM employees 
INNER JOIN jobs 
ON employees.`job_id`=jobs.`job_id`
WHERE employee_id=
(
	SELECT employee_id
	FROM employees
	WHERE salary=
	(
		SELECT MIN(salary)
		FROM employees
	)
)

查询最低工资大于50号部门最低工资的部门 id和最低工资

SELECT MIN(salary),employees.`department_id`
FROM employees
GROUP BY employees.`department_id`
HAVING MIN(salary)>
(
	SELECT MIN(salary)
	FROM departments 
	INNER JOIN employees
	ON employees.`department_id`=departments.`department_id`
	WHERE employees.`department_id`=50
)

非法使用子查询：
多行子查询使用单行比较符
子查询不返回任何行

多行子查询：

多行比较操作符
in / not in
any|some 搭配= 、>等
all 搭配=、>等

查询location_id是1400或1700的部门编号


SELECT last_name
FROM employees
WHERE employee_id IN
(
	SELECT distinct department_id
	FROM departments
	WHERE departments.`location_id` IN (1400,1700)
)

查询其他部门中比job_id为'IT_PROG'部门任一工资低的员工的员工号、
姓名、job_id以及salary



SELECT employee_id,salary,department_id
FROM employees
WHERE department_id <>
(
	SELECT DISTINCT department_id
	FROM employees
	WHERE employees.`job_id`='IT_PROG'
)
AND salary <ANY
(
	SELECT DISTINCT salary
	FROM employees
	WHERE employees.`job_id`='IT_PROG'
)

这里的!=不能使用，因为department_id中有为null的情况
任一不是任意，任意是所有，任一是任何一个都可以

下面这种是不考虑其它部门中有部门为null的情况

SELECT employee_id,salary,department_id
FROM employees
WHERE job_id <>
'IT_PROG'
AND salary <ANY
(
	SELECT DISTINCT salary
	FROM employees
	WHERE employees.`job_id`='IT_PROG'
)














